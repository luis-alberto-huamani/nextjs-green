{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport './login.scss';\nimport { Button, Popover } from 'reactstrap';\nimport Logo from '../logo-2/logo';\nimport { validateEmail, validateEmpty } from '../../utils/functions';\nimport Fail from './fail';\nimport Spinner from '../spinner/spinner';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { onUser, userAction } from '../../store/actions';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      login: true,\n      mail: '',\n      mailLabel: false,\n      mailPop: false,\n      pass: '',\n      passLabel: false,\n      passPop: false,\n      spinner: false,\n      fail: false\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.id, e.target.value));\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(e) {\n      var _this$setState2;\n\n      var label = \"\".concat(e.target.id, \"Label\");\n      var pop = \"\".concat(e.target.id, \"Pop\");\n      this.setState((_this$setState2 = {}, _defineProperty(_this$setState2, label, true), _defineProperty(_this$setState2, pop, false), _this$setState2));\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(e) {\n      var label = \"\".concat(e.target.id, \"Label\");\n      this.setState(_defineProperty({}, label, false));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this2 = this;\n\n        var _this$state, mail, pass, onUser, data, response, id;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$state = this.state, mail = _this$state.mail, pass = _this$state.pass;\n                onUser = this.props.onUser;\n                e.preventDefault();\n\n                if (validateEmail(mail)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                this.setState({\n                  mailPop: true\n                });\n                _context.next = 26;\n                break;\n\n              case 7:\n                if (validateEmpty(pass)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                this.setState({\n                  passPop: true\n                });\n                _context.next = 26;\n                break;\n\n              case 11:\n                this.setState({\n                  spinner: true,\n                  login: false\n                });\n                data = {\n                  mail: mail,\n                  pass: pass\n                };\n                _context.prev = 13;\n                _context.next = 16;\n                return axios.post('/api/login', data);\n\n              case 16:\n                response = _context.sent;\n                this.setState({\n                  spinner: false,\n                  login: true\n                });\n                id = response.data;\n                Router.push(\"/perfil/\".concat(id));\n                _context.next = 26;\n                break;\n\n              case 22:\n                _context.prev = 22;\n                _context.t0 = _context[\"catch\"](13);\n                this.setState({\n                  fail: true,\n                  login: false,\n                  spinner: false\n                });\n                setTimeout(function () {\n                  _this2.setState({\n                    login: true,\n                    fail: false\n                  });\n                }, 3000);\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[13, 22]]);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          login = _this$state2.login,\n          mail = _this$state2.mail,\n          mailLabel = _this$state2.mailLabel,\n          mailPop = _this$state2.mailPop,\n          pass = _this$state2.pass,\n          passLabel = _this$state2.passLabel,\n          passPop = _this$state2.passPop,\n          spinner = _this$state2.spinner,\n          fail = _this$state2.fail;\n      return React.createElement(\"section\", {\n        className: \"login_main_cont animated fadeIn\"\n      }, login && React.createElement(\"div\", {\n        className: \"form_cont\"\n      }, React.createElement(\"div\", {\n        className: \"form_header\"\n      }, React.createElement(Logo, {\n        color: \"#669f09\",\n        logoWidth: \"30px\",\n        fontSize: \"1.2rem\"\n      })), React.createElement(\"form\", {\n        method: \"POST\",\n        className: \"form_login\",\n        onSubmit: this.onSubmit\n      }, React.createElement(\"div\", {\n        className: \"input_cont\",\n        style: mailPop ? {\n          borderBottomColor: '#ff6c1a'\n        } : {\n          borderBottomColor: \"#669f09\"\n        }\n      }, React.createElement(\"label\", {\n        htmlFor: \"mail\",\n        style: mailLabel ? {\n          color: '#8bb940',\n          background: '#fff'\n        } : {\n          color: 'transparent',\n          background: 'transparent'\n        }\n      }, \"mail\"), React.createElement(\"input\", {\n        id: \"mail\",\n        name: \"mail\",\n        type: \"text\",\n        className: \"green_input\",\n        placeholder: \"Correo electronico\",\n        value: mail,\n        onChange: this.onChange,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur\n      }), React.createElement(Popover, {\n        className: \"popMsg\",\n        placement: \"right\",\n        target: \"mail\",\n        isOpen: mailPop\n      }, React.createElement(\"p\", null, \"La direccion de correo no es valida\"))), React.createElement(\"div\", {\n        className: \"input_cont\",\n        style: passPop ? {\n          borderBottomColor: '#ff6c1a'\n        } : {\n          borderBottomColor: \"#669f09\"\n        }\n      }, React.createElement(\"label\", {\n        htmlFor: \"pass\",\n        style: passLabel ? {\n          color: '#8bb940',\n          background: '#fff'\n        } : {\n          color: 'transparent',\n          background: 'transparent'\n        }\n      }, \"pass\"), React.createElement(\"input\", {\n        id: \"pass\",\n        name: \"pass\",\n        type: \"password\",\n        className: \"green_input\",\n        placeholder: \"Contrase\\xF1a\",\n        value: pass,\n        onChange: this.onChange,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur\n      }), React.createElement(Popover, {\n        className: \"popMsg\",\n        placement: \"right\",\n        target: \"pass\",\n        isOpen: passPop\n      }, React.createElement(\"p\", null, \"La contrase\\xF1a no es valida\"))), React.createElement(Button, {\n        type: \"submit\"\n      }, \"entrar\"))), fail && React.createElement(Fail, {\n        className: \"animated fadeInDown\",\n        text: \"Correo o contrase\\xF1a invalido\"\n      }), spinner && React.createElement(Spinner, null));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userStore: state.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    onUser: onUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/media/felix/projects/green/components/login/login.jsx"],"names":["React","Component","Button","Popover","Logo","validateEmail","validateEmpty","Fail","Spinner","Router","axios","bindActionCreators","connect","onUser","userAction","Login","props","state","login","mail","mailLabel","mailPop","pass","passLabel","passPop","spinner","fail","onChange","bind","onFocus","onBlur","onSubmit","e","setState","target","id","value","label","pop","preventDefault","data","post","response","push","setTimeout","borderBottomColor","color","background","mapStateToProps","userStore","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './login.scss';\nimport { Button, Popover } from 'reactstrap';\nimport Logo from '../logo-2/logo';\nimport { validateEmail, validateEmpty } from '../../utils/functions';\nimport Fail from './fail';\nimport Spinner from '../spinner/spinner';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { onUser, userAction } from '../../store/actions';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state= {\n      login: true,\n      mail: '',\n      mailLabel: false,\n      mailPop: false,\n      pass: '',\n      passLabel: false,\n      passPop: false,\n      spinner: false,\n      fail: false,\n    }\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.id]: e.target.value });\n  }\n\n  onFocus(e) {\n    const label = `${e.target.id}Label`;\n    const pop = `${e.target.id}Pop`;\n    this.setState({ [label]: true, [pop]: false  });\n  }\n\n  onBlur(e) {\n    const label = `${e.target.id}Label`;\n    this.setState({ [label]: false });\n  }\n\n  async onSubmit(e) {\n    const { mail, pass } = this.state;\n    const { onUser } = this.props;\n    e.preventDefault();\n    if (!validateEmail(mail)) {\n      this.setState({ mailPop: true });\n    } else if (!validateEmpty(pass)) {\n      this.setState({ passPop: true });\n    } else {\n      this.setState({ spinner: true, login: false })\n      const data = {\n        mail,\n        pass,\n      };\n      try{\n        const response = await axios.post('/api/login', data);\n        this.setState({ spinner: false, login: true });\n        const id = response.data\n        Router.push(`/perfil/${id}`);\n      } catch {\n        this.setState({ fail: true, login: false, spinner: false });\n        setTimeout(() => {\n          this.setState({ login: true, fail: false });\n        }, 3000);\n      }\n      /*fetch('/api/login.js', {\n        headers: { \"Content-Type\": \"application/json\" },\n        method: \"POST\",\n        body: JSON.stringify(data),\n      })\n        .then(res => {\n          if (res.status === 201) {\n            this.setState({ spinner: false, login: true });\n            res.text()\n              .then(resp => {\n                localStorage.setItem('id', resp);\n                Router.push(`/perfil?id=${resp}`);\n              })\n          } else {\n              this.setState({ fail: true, login: false, spinner: false });\n              setTimeout(() => {\n                this.setState({ login: true, fail: false });\n              }, 3000)\n            }\n        })\n        .catch(err => console.log(err));\n      */}\n  }\n\n  render() {\n    const {\n      login,\n      mail,\n      mailLabel,\n      mailPop,\n      pass,\n      passLabel,\n      passPop,\n      spinner,\n      fail,\n    } = this.state;\n    return(\n      <section className=\"login_main_cont animated fadeIn\">\n        {\n          login && (\n            <div className=\"form_cont\">\n              <div className=\"form_header\">\n                <Logo color=\"#669f09\" logoWidth=\"30px\" fontSize=\"1.2rem\" />\n              </div>\n              <form method='POST' className=\"form_login\" onSubmit={this.onSubmit}>\n                <div className=\"input_cont\" style={mailPop ? { borderBottomColor: '#ff6c1a'} : {borderBottomColor: \"#669f09\"}}>\n                  <label htmlFor=\"mail\" style={ mailLabel ? {color: '#8bb940', background: '#fff'} : {color: 'transparent', background: 'transparent'}}>mail</label>\n                  <input\n                    id=\"mail\"\n                    name=\"mail\"\n                    type=\"text\"\n                    className=\"green_input\"\n                    placeholder=\"Correo electronico\"\n                    value={mail}\n                    onChange={this.onChange}\n                    onFocus={this.onFocus}\n                    onBlur={this.onBlur}\n                  />\n                  <Popover className=\"popMsg\" placement=\"right\" target=\"mail\" isOpen={mailPop}>\n                    <p>La direccion de correo no es valida</p>\n                  </Popover>\n                </div>\n                <div className=\"input_cont\" style={passPop ? { borderBottomColor: '#ff6c1a'} : {borderBottomColor: \"#669f09\"}}>\n                  <label htmlFor=\"pass\" style={ passLabel ? {color: '#8bb940', background: '#fff'} : {color: 'transparent', background: 'transparent'} }>pass</label>\n                  <input\n                    id=\"pass\"\n                    name=\"pass\"\n                    type=\"password\"\n                    className=\"green_input\"\n                    placeholder=\"Contraseña\"\n                    value={pass}\n                    onChange={this.onChange}\n                    onFocus={this.onFocus}\n                    onBlur={this.onBlur}\n                  />\n                  <Popover className=\"popMsg\" placement=\"right\" target=\"pass\" isOpen={passPop}>\n                    <p>La contraseña no es valida</p>\n                  </Popover>\n                </div>\n                <Button type=\"submit\">entrar</Button>\n              </form>\n          </div>\n          )\n        }\n        {\n          fail && <Fail className=\"animated fadeInDown\" text=\"Correo o contraseña invalido\" />\n        }\n        {\n          spinner && <Spinner />\n        }\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ userStore: state.user });\nconst mapDispatchToProps = dispatch => bindActionCreators({ onUser }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}