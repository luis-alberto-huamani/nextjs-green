{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/felix/projects/green/components/perfil/perfil.jsx\";\nimport React, { Component } from 'react';\nimport { onLogin, onUser, userAction } from '../../store/actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './perfil.scss';\nimport PerfilHeader from './perfil-header';\nimport PerfilNav from './perfil-nav';\n\nvar Perfil =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Perfil, _Component);\n\n  function Perfil(props) {\n    _classCallCheck(this, Perfil);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Perfil).call(this, props));\n  }\n  /*componentDidMount() {\n    const { onLogin, user, onUser } = this.props;\n    onLogin(true);\n    const payload = {\n      action: userAction.LOG_IN,\n      data: user,\n    }\n    onUser(payload);\n  }*/\n\n\n  _createClass(Perfil, [{\n    key: \"render\",\n    value: function render() {\n      var user = this.props.user;\n      return React.createElement(\"div\", {\n        className: \"perfil_main_cont\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(PerfilHeader, {\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(PerfilNav, {\n        user: user,\n        id: user._id,\n        posts: user.posts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Perfil;\n}(Component); //const mapStateToProps = state => ({ login: state.login, userStore: state.user });\n//const mapDispatchToProps = dispatch => bindActionCreators({ onLogin, onUser }, dispatch);\n\n\nexport default Perfil; //connect(mapStateToProps, mapDispatchToProps)(Perfil);","map":{"version":3,"sources":["/media/felix/projects/green/components/perfil/perfil.jsx"],"names":["React","Component","onLogin","onUser","userAction","connect","bindActionCreators","PerfilHeader","PerfilNav","Perfil","props","user","_id","posts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,UAA1B,QAA4C,qBAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,eAAP;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA,+EACXA,KADW;AAElB;AAED;;;;;;;;;;;;;6BAUS;AAAA,UACCC,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAEA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEA,IAAjB;AAAuB,QAAA,EAAE,EAAEA,IAAI,CAACC,GAAhC;AAAqC,QAAA,KAAK,EAAED,IAAI,CAACE,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD;;;;EAvBkBZ,S,GA0BrB;AACA;;;AAEA,eAAeQ,MAAf,C,CAAsB","sourcesContent":["import React, { Component } from 'react';\nimport { onLogin, onUser, userAction } from '../../store/actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport './perfil.scss';\nimport PerfilHeader from './perfil-header';\nimport PerfilNav from './perfil-nav';\n\nclass Perfil extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  /*componentDidMount() {\n    const { onLogin, user, onUser } = this.props;\n    onLogin(true);\n    const payload = {\n      action: userAction.LOG_IN,\n      data: user,\n    }\n    onUser(payload);\n  }*/\n\n  render() {\n    const { user } = this.props;\n    return(\n      <div className=\"perfil_main_cont\">\n        <PerfilHeader user={user} />\n        <PerfilNav user={user} id={user._id} posts={user.posts} />\n      </div>\n    );\n  }\n}\n\n//const mapStateToProps = state => ({ login: state.login, userStore: state.user });\n//const mapDispatchToProps = dispatch => bindActionCreators({ onLogin, onUser }, dispatch);\n\nexport default Perfil //connect(mapStateToProps, mapDispatchToProps)(Perfil);\n"]},"metadata":{},"sourceType":"module"}