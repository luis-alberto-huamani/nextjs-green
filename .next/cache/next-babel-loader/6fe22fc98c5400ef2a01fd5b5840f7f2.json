{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport CardPost from '../card-post/card-post';\nimport { connect } from 'react-redux';\nimport Store from '../store/store';\nimport Link from 'next/link';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport AddPost from './add-post';\nimport './perfil-nav.scss';\nimport Friends from './friends';\nimport uuid from 'uuid/v1';\nvar myUsers = [{\n  id: '1234561',\n  url: '/kadkans',\n  fullName: 'jhon',\n  perfilImg: '/static/friend-1.jpg',\n  frontPageQuote: 'Debemos cuidar el mundo, yo siemre reciclo mis latas de cerveza'\n}, {\n  id: '1234562',\n  url: '/kadkans',\n  fullName: 'sacha',\n  perfilImg: '/static/friend-2.jpg',\n  frontPageQuote: 'En el set de grabacion todos los condones se reciclan'\n}, {\n  id: '1234563',\n  url: '/kadkans',\n  fullName: 'rachel',\n  perfilImg: '/static/friend-3.jpg',\n  frontPageQuote: 'Debemos cuidar nuestras playas para evitar el sifilis'\n}];\nvar myFriends = [{\n  id: '1234564',\n  url: '/kadkans',\n  fullName: 'mia',\n  perfilImg: '/static/friend-4.jpg',\n  frontPageQuote: 'No tengo nada que decir, solo entre aqui a subir mis videos para ganar greencoins'\n}];\n\nvar PerfilNav =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PerfilNav, _Component);\n\n  function PerfilNav(props) {\n    var _this;\n\n    _classCallCheck(this, PerfilNav);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PerfilNav).call(this, props));\n    _this.state = {\n      activeTab: '1',\n      history: '',\n      imgUrl: null,\n      posts: [],\n      addModal: false,\n      friends: [],\n      reqFriend: [],\n      currentUser: ''\n    };\n    _this.onToggle = _this.onToggle.bind(_assertThisInitialized(_this));\n    _this.onChangeText = _this.onChangeText.bind(_assertThisInitialized(_this));\n    _this.onChangeImg = _this.onChangeImg.bind(_assertThisInitialized(_this));\n    _this.addPost = _this.addPost.bind(_assertThisInitialized(_this));\n    _this.handleFriend = _this.handleFriend.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PerfilNav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          posts = _this$props.posts,\n          user = _this$props.user;\n      var currentUser = localStorage.getItem('id');\n      this.setState({\n        currentUser: currentUser,\n        posts: posts,\n        reqFriend: user.friendReq,\n        friends: user.friends\n      }); //this.setState({ currentUser, posts: posts, reqFriend: myUsers, friends: myFriends });\n    }\n  }, {\n    key: \"onToggle\",\n    value: function onToggle(tab) {\n      var activeTab = this.state.activeTab;\n\n      if (activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"onChangeText\",\n    value: function onChangeText(e) {\n      this.setState({\n        history: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeImg\",\n    value: function onChangeImg(e) {\n      var _this2 = this;\n\n      var img = e.target.files[0];\n      var reader = new FileReader();\n\n      reader.onloadend = function () {\n        _this2.setState({\n          imgUrl: reader.result\n        });\n      };\n\n      if (img) {\n        this.setState({\n          imgUrl: reader.readAsDataURL(img)\n        });\n      } else {\n        this.setState({\n          imgUrl: null\n        });\n      }\n    }\n  }, {\n    key: \"addPost\",\n    value: function addPost(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      var date = new Date().toLocaleDateString('es-ES', {\n        year: 'numeric',\n        month: 'numeric',\n        day: 'numeric'\n      });\n      var _this$state = this.state,\n          history = _this$state.history,\n          posts = _this$state.posts,\n          imgUrl = _this$state.imgUrl,\n          addModal = _this$state.addModal;\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          user = _this$props2.user;\n      var authorName = \"\".concat(user.name, \" \").concat(user.lastName);\n      var authorImg = user.perfilImg;\n      var newPost = {\n        author: {\n          img: authorImg,\n          name: authorName\n        },\n        date: date,\n        imgUrl: imgUrl,\n        history: history\n      };\n      var data = {\n        id: id,\n        author: newPost.author,\n        date: newPost.date,\n        imgUrl: newPost.imgUrl,\n        history: newPost.history\n      };\n      this.setState({\n        addModal: true\n      });\n      fetch('/api/newPost.js', {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: _JSON$stringify(data)\n      }).then(function (res) {\n        if (res.status === 200) {\n          _this3.setState({\n            history: '',\n            imgUrl: null,\n            posts: [newPost].concat(_toConsumableArray(_this3.state.posts)),\n            addModal: false\n          });\n        }\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"handleFriend\",\n    value: function handleFriend(action, id) {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          reqFriend = _this$state2.reqFriend,\n          friends = _this$state2.friends;\n      var currentUser = localStorage.getItem('id');\n      var targetUser = id;\n      var data = {\n        currentUser: currentUser,\n        targetUser: targetUser\n      };\n      var options = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: 'POST',\n        body: _JSON$stringify(data)\n      };\n\n      if (action === 'add') {\n        fetch(\"/api/addFriend.js\", options).then(function (res) {\n          if (res.status === 200) {\n            var newReqFriends = reqFriend.filter(function (item) {\n              return item.id !== id;\n            });\n            var newFriend = reqFriend.find(function (item) {\n              return item.id === id;\n            });\n\n            _this4.setState({\n              reqFriend: newReqFriends,\n              friends: [newFriend].concat(_toConsumableArray(friends))\n            });\n          }\n        });\n        /*const newReqFriends = reqFriend.filter((item) => item.id !== id);\n        const newFriend = reqFriend.find((item) => item.id === id);\n        this.setState({ reqFriend: newReqFriends, friends: [newFriend, ...friends] });*/\n      }\n\n      if (action === 'rm') {\n        fetch(\"/api/rmFriend.js\", options).then(function (res) {\n          if (res.status === 200) {\n            var newReqFriends = reqFriend.filter(function (item) {\n              return item.id !== id;\n            });\n\n            _this4.setState({\n              reqFriend: newReqFriends\n            });\n          }\n        }); //const newReqFriends = reqFriend.filter((item) => item.id !== id);\n        //this.setState({ reqFriend: newReqFriends });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state3 = this.state,\n          activeTab = _this$state3.activeTab,\n          history = _this$state3.history,\n          imgUrl = _this$state3.imgUrl,\n          posts = _this$state3.posts,\n          addModal = _this$state3.addModal,\n          reqFriend = _this$state3.reqFriend,\n          friends = _this$state3.friends,\n          currentUser = _this$state3.currentUser;\n      var _this$props3 = this.props,\n          store = _this$props3.store,\n          user = _this$props3.user;\n      return React.createElement(\"div\", null, store && React.createElement(Store, null), React.createElement(Nav, {\n        tabs: true\n      }, React.createElement(NavItem, null, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1',\n          nav_item: this.state.activeTab !== '1'\n        }),\n        onClick: function onClick() {\n          _this5.onToggle('1');\n        }\n      }, \"Muro\")), React.createElement(NavItem, null, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2',\n          nav_item: this.state.activeTab !== '2'\n        }),\n        onClick: function onClick() {\n          _this5.onToggle('2');\n        }\n      }, \"Historia\")), React.createElement(NavItem, null, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '3',\n          nav_item: this.state.activeTab !== '3'\n        }),\n        onClick: function onClick() {\n          _this5.onToggle('3');\n        }\n      }, \"Amigos\")), React.createElement(NavItem, null, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '4',\n          nav_item: this.state.activeTab !== '4'\n        }),\n        onClick: function onClick() {\n          _this5.onToggle('4');\n        }\n      }, \"Deseos\"))), React.createElement(TabContent, {\n        activeTab: activeTab\n      }, React.createElement(TabPane, {\n        tabId: \"1\"\n      }, React.createElement(Row, null, React.createElement(Col, {\n        sm: \"12\"\n      }, currentUser === user._id && React.createElement(\"div\", null, React.createElement(AddPost, {\n        value: history,\n        onChangeText: this.onChangeText,\n        img: imgUrl,\n        onChangeImg: this.onChangeImg,\n        onSubmit: this.addPost,\n        modal: addModal\n      }), React.createElement(\"div\", {\n        className: \"line\"\n      })))), React.createElement(Row, null, React.createElement(Col, null, React.createElement(CardPost, {\n        posts: posts\n      })))), React.createElement(TabPane, {\n        tabId: \"2\"\n      }, React.createElement(Row, null, React.createElement(Col, {\n        sm: \"12\"\n      }, React.createElement(\"div\", {\n        className: \"info_perfil_con\"\n      }, React.createElement(\"h2\", null, \"Historia\"), React.createElement(\"p\", null, user.history)), React.createElement(\"div\", {\n        className: \"info_perfil_con\"\n      }, React.createElement(\"h2\", null, \"intereses\"), React.createElement(\"p\", null, user.interest)), React.createElement(\"div\", {\n        className: \"info_perfil_con\"\n      }, React.createElement(\"h2\", null, \"correo\"), React.createElement(\"p\", null, user.mail))))), React.createElement(TabPane, {\n        tabId: \"3\"\n      }, React.createElement(Row, null, React.createElement(Col, {\n        sm: \"6\"\n      }, React.createElement(\"ul\", {\n        className: \"friend_main_cont\"\n      }, friends.map(function (item) {\n        return React.createElement(\"li\", {\n          key: uuid()\n        }, React.createElement(\"a\", {\n          href: item.url\n        }, React.createElement(\"div\", {\n          className: \"friend_cont\"\n        }, React.createElement(\"img\", {\n          className: \"img-fluid\",\n          src: item.perfilImg,\n          alt: \"\"\n        }), React.createElement(\"p\", null, item.fullName))));\n      }))), React.createElement(Col, {\n        sm: \"6\"\n      }, React.createElement(\"div\", null, React.createElement(\"h2\", {\n        style: {\n          marginTop: '2rem',\n          fontSize: \"1rem\"\n        }\n      }, \"Solicitudes de amistad\"), React.createElement(Friends, {\n        users: reqFriend,\n        onClick: this.handleFriend\n      }))))), React.createElement(TabPane, {\n        tabId: \"4\"\n      }, React.createElement(Row, null, React.createElement(Col, {\n        sm: \"12\"\n      }, React.createElement(\"h2\", null, \"Tab 4\"))))));\n    }\n  }]);\n\n  return PerfilNav;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    store: state.store\n  };\n};\n\nexport default connect(mapStateToProps)(PerfilNav);","map":{"version":3,"sources":["/media/felix/projects/green/components/perfil/perfil-nav.jsx"],"names":["React","Component","fetch","CardPost","connect","Store","Link","TabContent","TabPane","Nav","NavItem","NavLink","Row","Col","classnames","AddPost","Friends","uuid","myUsers","id","url","fullName","perfilImg","frontPageQuote","myFriends","PerfilNav","props","state","activeTab","history","imgUrl","posts","addModal","friends","reqFriend","currentUser","onToggle","bind","onChangeText","onChangeImg","addPost","handleFriend","user","localStorage","getItem","setState","friendReq","tab","e","target","value","img","files","reader","FileReader","onloadend","result","readAsDataURL","preventDefault","date","Date","toLocaleDateString","year","month","day","authorName","name","lastName","authorImg","newPost","author","data","headers","method","body","then","res","status","err","console","log","action","targetUser","options","newReqFriends","filter","item","newFriend","find","store","active","nav_item","_id","interest","mail","map","marginTop","fontSize","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport CardPost from '../card-post/card-post';\nimport { connect } from 'react-redux';\nimport Store from '../store/store';\nimport Link from 'next/link';\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport AddPost from './add-post';\nimport './perfil-nav.scss';\nimport Friends from './friends';\nimport uuid from 'uuid/v1';\nconst myUsers = [\n  {\n    id: '1234561',\n    url:'/kadkans',\n    fullName: 'jhon',\n    perfilImg: '/static/friend-1.jpg',\n    frontPageQuote: 'Debemos cuidar el mundo, yo siemre reciclo mis latas de cerveza'\n  },\n  {\n    id: '1234562',\n    url:'/kadkans',\n    fullName: 'sacha',\n    perfilImg: '/static/friend-2.jpg',\n    frontPageQuote: 'En el set de grabacion todos los condones se reciclan'\n  },\n  {\n    id: '1234563',\n    url:'/kadkans',\n    fullName: 'rachel',\n    perfilImg: '/static/friend-3.jpg',\n    frontPageQuote: 'Debemos cuidar nuestras playas para evitar el sifilis'\n  }\n];\n\nconst myFriends = [\n  {\n    id: '1234564',\n    url:'/kadkans',\n    fullName: 'mia',\n    perfilImg: '/static/friend-4.jpg',\n    frontPageQuote: 'No tengo nada que decir, solo entre aqui a subir mis videos para ganar greencoins'\n  }\n]\n\nclass PerfilNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      history: '',\n      imgUrl: null,\n      posts:[],\n      addModal: false,\n      friends: [],\n      reqFriend: [],\n      currentUser: '',\n    };\n    this.onToggle = this.onToggle.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onChangeImg = this.onChangeImg.bind(this);\n    this.addPost = this.addPost.bind(this);\n    this.handleFriend = this.handleFriend.bind(this);\n  }\n\n  componentDidMount() {\n    const { posts, user } = this.props;\n    const currentUser = localStorage.getItem('id');\n    this.setState({ currentUser, posts: posts, reqFriend: user.friendReq, friends: user.friends });\n    //this.setState({ currentUser, posts: posts, reqFriend: myUsers, friends: myFriends });\n  }\n\n  onToggle(tab) {\n    const { activeTab } = this.state;\n    if (activeTab !== tab) {\n      this.setState({ activeTab: tab });\n    }\n  }\n\n  onChangeText(e) {\n    this.setState({ history: e.target.value });\n  }\n  onChangeImg(e) {\n    const img = e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend= () => {\n      this.setState({ imgUrl: reader.result });\n    }\n    if (img) {\n      this.setState({ imgUrl: reader.readAsDataURL(img) });\n    } else {\n      this.setState({ imgUrl: null });\n    }\n  }\n\n  addPost(e) {\n    e.preventDefault()\n    const date = new Date().toLocaleDateString('es-ES', { year: 'numeric', month: 'numeric', day:'numeric' });\n    const { history, posts, imgUrl, addModal } = this.state;\n    const { id, user } = this.props;\n    const authorName = `${user.name} ${user.lastName}`;\n    const authorImg = user.perfilImg;\n    const newPost = {\n      author: {\n        img: authorImg,\n        name:authorName,\n      },\n      date,\n      imgUrl,\n      history,\n    };\n    const data = {\n      id,\n      author: newPost.author,\n      date: newPost.date,\n      imgUrl: newPost.imgUrl,\n      history: newPost.history,\n    }\n    this.setState({ addModal: true });\n    fetch('/api/newPost.js', {\n      headers: { \"Content-Type\": \"application/json\" },\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          this.setState({ history: '', imgUrl: null, posts: [newPost, ...this.state.posts], addModal: false  });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleFriend(action, id) {\n    const { reqFriend, friends } = this.state;\n    const currentUser = localStorage.getItem('id');\n    const targetUser = id;\n    const data = {\n      currentUser,\n      targetUser\n    }\n    const options = {\n      headers: { \"Content-Type\": \"application/json\" },\n      method: 'POST',\n      body: JSON.stringify(data),\n    }\n    if (action === 'add') {\n      fetch(`/api/addFriend.js`, options)\n        .then(res => {\n          if (res.status === 200) {\n            const newReqFriends = reqFriend.filter((item) => item.id !== id);\n            const newFriend = reqFriend.find((item) => item.id === id);\n            this.setState({ reqFriend: newReqFriends, friends: [newFriend, ...friends] });\n          }\n        })\n        /*const newReqFriends = reqFriend.filter((item) => item.id !== id);\n        const newFriend = reqFriend.find((item) => item.id === id);\n        this.setState({ reqFriend: newReqFriends, friends: [newFriend, ...friends] });*/\n    }\n    if (action === 'rm') {\n      fetch(`/api/rmFriend.js`, options)\n        .then(res => {\n          if (res.status === 200) {\n            const newReqFriends = reqFriend.filter((item) => item.id !== id);\n            this.setState({ reqFriend: newReqFriends });\n          }\n        })\n        //const newReqFriends = reqFriend.filter((item) => item.id !== id);\n        //this.setState({ reqFriend: newReqFriends });\n    }\n  }\n  \n  render() {\n    const {\n      activeTab,\n      history,\n      imgUrl,\n      posts,\n      addModal,\n      reqFriend,\n      friends,\n      currentUser\n    } = this.state;\n    const { store, user } = this.props;\n    return (\n      <div>\n        {\n          store && <Store />\n        }\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1', nav_item: this.state.activeTab !== '1'  })}\n              onClick={()=>{this.onToggle('1')}}\n            >\n              Muro\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2', nav_item: this.state.activeTab !== '2'  })}\n              onClick={()=>{this.onToggle('2')}}\n            >\n              Historia\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '3', nav_item: this.state.activeTab !== '3'  })}\n              onClick={()=>{this.onToggle('3')}}\n            >\n              Amigos\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '4', nav_item: this.state.activeTab !== '4'  })}\n              onClick={()=>{this.onToggle('4')}}\n            >\n              Deseos\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={activeTab} >\n          <TabPane tabId='1'>\n            <Row>\n              <Col sm=\"12\">\n                {\n                  currentUser === user._id && (\n                    <div>\n                      <AddPost\n                      value={history}\n                      onChangeText={this.onChangeText}\n                      img={imgUrl}\n                      onChangeImg={this.onChangeImg}\n                      onSubmit={this.addPost}\n                      modal={addModal}\n                    />\n                      <div className=\"line\" />\n                    </div>\n                  )\n                }\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <CardPost posts={posts}  />\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId='2'>\n            <Row>\n              <Col sm=\"12\">\n                <div className=\"info_perfil_con\">\n                  <h2>Historia</h2>\n                  <p>{user.history}</p>\n                </div>\n                <div className=\"info_perfil_con\">\n                  <h2>intereses</h2>\n                  <p>{user.interest}</p>\n                </div>\n                <div className=\"info_perfil_con\">\n                  <h2>correo</h2>\n                  <p>{user.mail}</p>\n                </div>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId='3'>\n            <Row>\n              <Col sm='6'>\n                <ul className=\"friend_main_cont\">\n                  {\n                    friends.map((item) => (\n                      <li key={uuid()}>\n                        <a href={item.url}>\n                          <div className=\"friend_cont\">\n                            <img className=\"img-fluid\" src={item.perfilImg} alt=\"\"/>\n                            <p>{item.fullName}</p>\n                          </div>\n                        </a>\n                      </li>\n                    ))\n                    }\n                </ul>\n              </Col>\n              <Col sm=\"6\">\n                <div>\n                <h2 style={{marginTop: '2rem', fontSize: \"1rem\"}}>Solicitudes de amistad</h2>\n                  {\n                    <Friends \n                      users={reqFriend}\n                      onClick={this.handleFriend}\n                    />\n                  }                \n                </div>\n            </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId='4'>\n            <Row>\n              <Col sm=\"12\">\n                <h2>Tab 4</h2>\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => ({ store: state.store });\n\nexport default connect(mapStateToProps)(PerfilNav);\n\n"]},"metadata":{},"sourceType":"module"}