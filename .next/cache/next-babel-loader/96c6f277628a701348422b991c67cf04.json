{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport Button from '../buttons/button';\nimport Logo from '../logo-2/logo';\nimport './header.scss';\nimport classnames from 'classnames';\nimport PopOver from '../btn-resp/popOver';\nimport Notifications from '../notifications/notifications';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { onNav } from '../../store/actions';\nimport { color } from '../btn-resp/css-layout';\nvar iconBars = React.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 448 512\",\n  className: _JSXStyle.dynamic([[\"3976290093\", [color.danger]]])\n}, React.createElement(_JSXStyle, {\n  id: \"3976290093\",\n  dynamic: [color.danger]\n}, [\"svg.__jsx-style-dynamic-selector{fill:#fff;width:20px;border:#fff;padding:3px;-webkit-transition:ease .5s;transition:ease .5s;}\", \"svg.__jsx-style-dynamic-selector:hover{fill:\".concat(color.danger, \";background:#fff;}\")]), React.createElement(\"path\", {\n  d: \"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\",\n  className: _JSXStyle.dynamic([[\"3976290093\", [color.danger]]])\n}));\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n    _this.state = {\n      down: false\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.onscroll = function () {\n        if (window.scrollY > 50) {\n          _this2.setState({\n            down: true\n          });\n        } else {\n          _this2.setState({\n            down: false\n          });\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var down = this.state.down;\n      var isLogin = this.props.isLogin;\n      return React.createElement(\"header\", {\n        className: classnames({\n          scroll_header: down || isLogin,\n          header_hero_main: true,\n          shadow: down\n        })\n      }, React.createElement(\"div\", {\n        className: \"container-fluid header_main_cont animated fadeInDown\"\n      }, React.createElement(Logo, null), React.createElement(\"nav\", null, isLogin ? React.createElement(React.Fragment, null, React.createElement(Notifications, null), React.createElement(\"button\", {\n        style: {\n          background: \"transparent\",\n          border: \"none\"\n        },\n        onClick: this.props.onNav,\n        id: \"btn-resp\",\n        type: \"button\",\n        className: \"jsx-3521646900\"\n      }, iconBars, React.createElement(_JSXStyle, {\n        id: \"3521646900\"\n      }, [\"button.jsx-3521646900:focus{outline:none;}\"])), React.createElement(PopOver, {\n        popOpen: this.props.nav\n      })) : React.createElement(Link, {\n        href: \"/login\"\n      }, React.createElement(Button, {\n        color: \"light\"\n      }, \"Login\")))));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\n;\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    onNav: onNav\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLogin: state.login,\n    nav: state.nav\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":null,"metadata":{},"sourceType":"module"}