{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport './body.scss';\nimport StepsPost from './steps';\nimport Step1 from './step-1';\nimport Step2 from './step-2';\nimport Step3 from './step-3';\nimport Button from '../buttons/button';\nimport Spinner from '../spinner/spinner';\nimport Greetings from './greeting';\nimport Router from 'next/router';\n\nvar BodyPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BodyPost, _Component);\n\n  function BodyPost(props) {\n    var _this;\n\n    _classCallCheck(this, BodyPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BodyPost).call(this, props));\n    _this.state = {\n      index: 1,\n      step1: true,\n      step1Out: false,\n      perfilPic: null,\n      name: '',\n      lastName: '',\n      history: '',\n      birthday: '',\n      interest: '',\n      step2: false,\n      step2Out: false,\n      frontPic: null,\n      frontQuote: '',\n      step3: false,\n      spinner: false,\n      greetings: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleFile = _this.handleFile.bind(_assertThisInitialized(_this));\n    _this.onNext = _this.onNext.bind(_assertThisInitialized(_this));\n    _this.onCancel = _this.onCancel.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(BodyPost, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.id, e.target.value));\n    }\n  }, {\n    key: \"handleFile\",\n    value: function handleFile(e) {\n      var _this2 = this;\n\n      var element = e.target.id;\n      var img = e.target.files[0];\n      var reader = new FileReader();\n\n      reader.onloadend = function () {\n        _this2.setState(_defineProperty({}, element, reader.result));\n      };\n\n      if (img) {\n        reader.readAsDataURL(img);\n      } else {\n        this.setState(_defineProperty({}, e.target.id, null));\n      }\n    }\n  }, {\n    key: \"onNext\",\n    value: function onNext() {\n      var _this3 = this;\n\n      var index = this.state.index;\n\n      if (index >= 3) {\n        this.setState({\n          index: 2\n        });\n      } else {\n        this.setState({\n          index: index + 1\n        });\n      }\n\n      if (index === 1) {\n        this.setState({\n          step1Out: true\n        });\n        setTimeout(function () {\n          _this3.setState({\n            step1: false,\n            step2: true\n          });\n        }, 300);\n      }\n\n      if (index === 2) {\n        this.setState({\n          step2Out: true\n        });\n        setTimeout(function () {\n          _this3.setState({\n            step2: false,\n            step3: true\n          });\n        }, 300);\n      }\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.setState({\n        step1: true,\n        step1Out: false,\n        perfilPic: null,\n        name: '',\n        lastName: '',\n        history: '',\n        birthday: '',\n        interest: '',\n        step2Out: false,\n        frontPic: null,\n        frontQuote: '',\n        step3: false\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          perfilPic = _this$state.perfilPic,\n          name = _this$state.name,\n          lastName = _this$state.lastName,\n          history = _this$state.history,\n          birthday = _this$state.birthday,\n          interest = _this$state.interest,\n          frontPic = _this$state.frontPic,\n          frontQuote = _this$state.frontQuote;\n      var id = this.props.id;\n      var data = {\n        id: id,\n        name: name,\n        lastName: lastName,\n        perfilImg: perfilPic,\n        history: history,\n        birthday: birthday,\n        interest: interest,\n        frontPageImg: frontPic,\n        frontPageQuote: frontQuote\n      };\n      var options = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: _JSON$stringify(data)\n      };\n      this.setState({\n        step3: false,\n        spinner: true\n      });\n      fetch('/api/postregistro.js', options).then(function (res) {\n        if (res.status === 201) {\n          _this4.setState({\n            spinner: false,\n            greetings: true\n          });\n\n          res.json().then(function (res) {\n            setTimeout(function () {\n              Router.push(\"/perfil?id=\".concat(id));\n            }, 2000);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          index = _this$state2.index,\n          greetings = _this$state2.greetings,\n          step1 = _this$state2.step1,\n          step1Out = _this$state2.step1Out,\n          perfilPic = _this$state2.perfilPic,\n          name = _this$state2.name,\n          lastName = _this$state2.lastName,\n          history = _this$state2.history,\n          birthday = _this$state2.birthday,\n          interest = _this$state2.interest,\n          step2 = _this$state2.step2,\n          step2Out = _this$state2.step2Out,\n          frontPic = _this$state2.frontPic,\n          frontQuote = _this$state2.frontQuote,\n          step3 = _this$state2.step3,\n          spinner = _this$state2.spinner;\n      var valuesStep1 = {\n        perfilPic: perfilPic,\n        name: name,\n        lastName: lastName,\n        history: history,\n        birthday: birthday,\n        interest: interest\n      };\n      var valuesStep2 = {\n        frontPic: frontPic,\n        frontQuote: frontQuote\n      };\n      var user = {\n        perfilImg: perfilPic,\n        name: name,\n        lastName: lastName,\n        history: history,\n        birthday: birthday,\n        interest: interest,\n        frontPageImg: frontPic,\n        frontPageQuote: frontQuote\n      };\n      return React.createElement(\"section\", {\n        className: \"postregistro_body_cont\"\n      }, React.createElement(\"div\", {\n        className: \"container-fluid\"\n      }, greetings && React.createElement(Greetings, null), !spinner && !greetings && React.createElement(StepsPost, {\n        index: index\n      }), step1 && React.createElement(Step1, _defineProperty({\n        out: step1Out,\n        onChange: this.handleChange,\n        onNext: this.onNext,\n        onFile: this.handleFile,\n        values: valuesStep1\n      }, \"onNext\", this.onNext)), step2 && React.createElement(Step2, {\n        out: step2Out,\n        onChange: this.handleChange,\n        onFile: this.handleFile,\n        values: valuesStep2\n      }), step3 && React.createElement(Step3, {\n        user: user\n      })), spinner && React.createElement(\"div\", {\n        style: {\n          marginTop: \"20vh\"\n        }\n      }, React.createElement(Spinner, null)), !spinner && !greetings && React.createElement(\"div\", {\n        className: \"footer\"\n      }, step3 ? React.createElement(React.Fragment, null, React.createElement(Button, {\n        onClick: this.onCancel,\n        color: \"dark\",\n        size: \"md\"\n      }, \"Cancelar\"), React.createElement(Button, {\n        onClick: this.onSubmit,\n        color: \"dark\",\n        size: \"md\"\n      }, \"Confirmar\")) : React.createElement(Button, {\n        onClick: this.onNext,\n        color: \"light\",\n        size: \"md\"\n      }, \"Siguiente\")));\n    }\n  }]);\n\n  return BodyPost;\n}(Component);\n\nexport default BodyPost;","map":null,"metadata":{},"sourceType":"module"}