{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport Button from '../buttons/button';\nimport Logo from '../logo-2/logo';\nimport './header.scss';\nimport classnames from 'classnames';\nimport PopOver from '../btn-resp/popOver';\nimport Notifications from '../notifications/notifications';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { onNav, onLogin } from '../../store/actions';\nimport { color } from '../btn-resp/css-layout';\nimport uuid from 'uuid/v1';\nvar iconBars = React.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 448 512\",\n  className: _JSXStyle.dynamic([[\"3976290093\", [color.danger]]])\n}, React.createElement(_JSXStyle, {\n  id: \"3976290093\",\n  dynamic: [color.danger]\n}, [\"svg.__jsx-style-dynamic-selector{fill:#fff;width:20px;border:#fff;padding:3px;-webkit-transition:ease .5s;transition:ease .5s;}\", \"svg.__jsx-style-dynamic-selector:hover{fill:\".concat(color.danger, \";background:#fff;}\")]), React.createElement(\"path\", {\n  d: \"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\",\n  className: _JSXStyle.dynamic([[\"3976290093\", [color.danger]]])\n}));\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n    _this.state = {\n      isLogin: true,\n      down: false,\n      notifications: {\n        heart: 1,\n        gifts: 2,\n        friendReq: [1, 2]\n      },\n      lookup: []\n    };\n    _this.onSearch = _this.onSearch.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var id = localStorage.getItem('id');\n      var onLogin = this.props.onLogin;\n\n      if (id) {\n        fetch(\"/api/notifications.js?id=\".concat(id)).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          onLogin(true);\n\n          _this2.setState({\n            notifications: res\n          });\n        });\n      }\n\n      window.onscroll = function () {\n        if (window.scrollY > 30) {\n          _this2.setState({\n            down: true\n          });\n        } else {\n          _this2.setState({\n            down: false\n          });\n        }\n      };\n    }\n  }, {\n    key: \"onSearch\",\n    value: function onSearch(e) {\n      var _this3 = this;\n\n      var searchBar = this.state.notifications.searchBar;\n      var userInput = e.target.value;\n\n      if (userInput) {\n        fetch(\"/api/search/\".concat(userInput)).then(function (res) {\n          return res.json();\n        }).then(function (res) {\n          return _this3.setState({\n            lookup: res\n          });\n        });\n      } else {\n        this.setState({\n          lookup: []\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          down = _this$state.down,\n          notifications = _this$state.notifications,\n          lookup = _this$state.lookup;\n      var isLogin = this.props.isLogin;\n      return React.createElement(\"header\", {\n        className: classnames({\n          scroll_header: down || isLogin,\n          header_hero_main: true,\n          shadow: down\n        })\n      }, React.createElement(\"div\", {\n        className: \"container-fluid header_main_cont animated fadeInDown\"\n      }, React.createElement(Logo, null), isLogin && React.createElement(\"div\", {\n        className: \"serachBar_cont\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Buscar\",\n        onChange: this.onSearch\n      }), lookup.length > 0 && React.createElement(\"ul\", {\n        className: \"lookup_cont\"\n      }, lookup.map(function (item) {\n        return React.createElement(\"li\", {\n          key: uuid()\n        }, React.createElement(Link, {\n          href: item.url\n        }, React.createElement(\"a\", null, item.fullName)));\n      }))), React.createElement(\"nav\", null, isLogin ? React.createElement(React.Fragment, null, React.createElement(Notifications, {\n        notes: notifications\n      }), React.createElement(\"button\", {\n        style: {\n          background: \"transparent\",\n          border: \"none\"\n        },\n        onClick: this.props.onNav,\n        id: \"btn-resp\",\n        type: \"button\",\n        className: \"jsx-3521646900\"\n      }, iconBars, React.createElement(_JSXStyle, {\n        id: \"3521646900\"\n      }, [\"button.jsx-3521646900:focus{outline:none;}\"])), React.createElement(PopOver, {\n        popOpen: this.props.nav\n      })) : React.createElement(Link, {\n        href: \"/login\"\n      }, React.createElement(\"button\", {\n        className: \"btn_login\",\n        color: \"light\"\n      }, \"Login\")))));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\n;\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    onNav: onNav,\n    onLogin: onLogin\n  }, dispatch);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLogin: state.login,\n    nav: state.nav\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":null,"metadata":{},"sourceType":"module"}