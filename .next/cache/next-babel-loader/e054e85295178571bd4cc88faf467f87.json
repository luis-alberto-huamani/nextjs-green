{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport CardPost from '../card-post/card-post';\nimport { connect } from 'react-redux';\nimport Store from '../store/store';\nimport Link from 'next/link';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport AddPost from './add-post';\nimport './perfil-nav.scss';\nimport Friends from './friends';\nimport uuid from 'uuid/v1';\nvar myUsers = [{\n  id: '1234561',\n  url: '/kadkans',\n  fullName: 'jhon',\n  perfilImg: '/static/friend-1.jpg',\n  frontPageQuote: 'Debemos cuidar el mundo, yo siemre reciclo mis latas de cerveza'\n}, {\n  id: '1234562',\n  url: '/kadkans',\n  fullName: 'sacha',\n  perfilImg: '/static/friend-2.jpg',\n  frontPageQuote: 'En el set de grabacion todos los condones se reciclan'\n}, {\n  id: '1234563',\n  url: '/kadkans',\n  fullName: 'rachel',\n  perfilImg: '/static/friend-3.jpg',\n  frontPageQuote: 'Debemos cuidar nuestras playas para evitar el sifilis'\n}];\nvar myFriends = [{\n  id: '1234564',\n  url: '/kadkans',\n  fullName: 'mia',\n  perfilImg: '/static/friend-4.jpg',\n  frontPageQuote: 'No tengo nada que decir, solo entre aqui a subir mis videos para ganar greencoins'\n}];\n\nvar PerfilNav =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PerfilNav, _Component);\n\n  function PerfilNav(props) {\n    var _this;\n\n    _classCallCheck(this, PerfilNav);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PerfilNav).call(this, props));\n    _this.state = {\n      activeTab: '1',\n      history: '',\n      imgUrl: null,\n      posts: [],\n      addModal: false,\n      friends: [],\n      reqFriend: [],\n      currentUser: ''\n    };\n    _this.onToggle = _this.onToggle.bind(_assertThisInitialized(_this));\n    _this.onChangeText = _this.onChangeText.bind(_assertThisInitialized(_this));\n    _this.onChangeImg = _this.onChangeImg.bind(_assertThisInitialized(_this));\n    _this.addPost = _this.addPost.bind(_assertThisInitialized(_this));\n    _this.handleFriend = _this.handleFriend.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(PerfilNav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          posts = _this$props.posts,\n          user = _this$props.user;\n      var currentUser = localStorage.getItem('id');\n      this.setState({\n        currentUser: currentUser,\n        posts: posts,\n        reqFriend: user.friendReq,\n        friends: user.friends\n      }); //this.setState({ currentUser, posts: posts, reqFriend: myUsers, friends: myFriends });\n    }\n  }, {\n    key: \"onToggle\",\n    value: function onToggle(tab) {\n      var activeTab = this.state.activeTab;\n\n      if (activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"onChangeText\",\n    value: function onChangeText(e) {\n      this.setState({\n        history: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeImg\",\n    value: function onChangeImg(e) {\n      var _this2 = this;\n\n      var img = e.target.files[0];\n      var reader = new FileReader();\n\n      reader.onloadend = function () {\n        _this2.setState({\n          imgUrl: reader.result\n        });\n      };\n\n      if (img) {\n        this.setState({\n          imgUrl: reader.readAsDataURL(img)\n        });\n      } else {\n        this.setState({\n          imgUrl: null\n        });\n      }\n    }\n  }, {\n    key: \"addPost\",\n    value: function addPost(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n      var date = new Date().toLocaleDateString('es-ES', {\n        year: 'numeric',\n        month: 'numeric',\n        day: 'numeric'\n      });\n      var _this$state = this.state,\n          history = _this$state.history,\n          posts = _this$state.posts,\n          imgUrl = _this$state.imgUrl,\n          addModal = _this$state.addModal;\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          user = _this$props2.user;\n      var authorName = \"\".concat(user.name, \" \").concat(user.lastName);\n      var authorImg = user.perfilImg;\n      var newPost = {\n        author: {\n          img: authorImg,\n          name: authorName\n        },\n        date: date,\n        imgUrl: imgUrl,\n        history: history\n      };\n      var data = {\n        id: id,\n        author: newPost.author,\n        date: newPost.date,\n        imgUrl: newPost.imgUrl,\n        history: newPost.history\n      };\n      this.setState({\n        addModal: true\n      });\n      fetch('/api/newPost.js', {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: \"POST\",\n        body: _JSON$stringify(data)\n      }).then(function (res) {\n        if (res.status === 200) {\n          _this3.setState({\n            history: '',\n            imgUrl: null,\n            posts: [newPost].concat(_toConsumableArray(_this3.state.posts)),\n            addModal: false\n          });\n        }\n      })[\"catch\"](function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"handleFriend\",\n    value: function handleFriend(action, id) {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          reqFriend = _this$state2.reqFriend,\n          friends = _this$state2.friends;\n      var currentUser = localStorage.getItem('id');\n      var targetUser = id;\n      var data = {\n        currentUser: currentUser,\n        targetUser: targetUser\n      };\n      var options = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: 'POST',\n        body: _JSON$stringify(data)\n      };\n\n      if (action === 'add') {\n        fetch(\"/api/addFriend.js\", options).then(function (res) {\n          if (res.status === 200) {\n            var newReqFriends = reqFriend.filter(function (item) {\n              return item.id !== id;\n            });\n            var newFriend = reqFriend.find(function (item) {\n              return item.id === id;\n            });\n\n            _this4.setState({\n              reqFriend: newReqFriends,\n              friends: [newFriend].concat(_toConsumableArray(friends))\n            });\n          }\n        });\n        /*const newReqFriends = reqFriend.filter((item) => item.id !== id);\n        const newFriend = reqFriend.find((item) => item.id === id);\n        this.setState({ reqFriend: newReqFriends, friends: [newFriend, ...friends] });*/\n      }\n\n      if (action === 'rm') {\n        fetch(\"/api/rmFriend.js\", options).then(function (res) {\n          if (res.status === 200) {\n            var newReqFriends = reqFriend.filter(function (item) {\n              return item.id !== id;\n            });\n\n            _this4.setState({\n              reqFriend: newReqFriends\n            });\n          }\n        }); //const newReqFriends = reqFriend.filter((item) => item.id !== id);\n        //this.setState({ reqFriend: newReqFriends });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state3 = this.state,\n          activeTab = _this$state3.activeTab,\n          history = _this$state3.history,\n          imgUrl = _this$state3.imgUrl,\n          posts = _this$state3.posts,\n          addModal = _this$state3.addModal,\n          reqFriend = _this$state3.reqFriend,\n          friends = _this$state3.friends,\n          currentUser = _this$state3.currentUser;\n      var _this$props3 = this.props,\n          store = _this$props3.store,\n          user = _this$props3.user;\n      return React.createElement(\"div\", null, store && React.createElement(Store, null), React.createElement(Nav, {\n        tabs: true\n      }, React.createElement(NavItem, null, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '1',\n          nav_item: this.state.activeTab !== '1'\n        }),\n        onClick: function onClick() {\n          _this5.onToggle('1');\n        }\n      }, \"Muro\")), React.createElement(NavItem, null, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '2',\n          nav_item: this.state.activeTab !== '2'\n        }),\n        onClick: function onClick() {\n          _this5.onToggle('2');\n        }\n      }, \"Historia\")), React.createElement(NavItem, null, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '3',\n          nav_item: this.state.activeTab !== '3'\n        }),\n        onClick: function onClick() {\n          _this5.onToggle('3');\n        }\n      }, \"Amigos\")), React.createElement(NavItem, null, React.createElement(NavLink, {\n        className: classnames({\n          active: this.state.activeTab === '4',\n          nav_item: this.state.activeTab !== '4'\n        }),\n        onClick: function onClick() {\n          _this5.onToggle('4');\n        }\n      }, \"Deseos\"))), React.createElement(TabContent, {\n        activeTab: activeTab\n      }, React.createElement(TabPane, {\n        tabId: \"1\"\n      }, React.createElement(Row, null, React.createElement(Col, {\n        sm: \"12\"\n      }, currentUser === user._id && React.createElement(\"div\", null, React.createElement(AddPost, {\n        value: history,\n        onChangeText: this.onChangeText,\n        img: imgUrl,\n        onChangeImg: this.onChangeImg,\n        onSubmit: this.addPost,\n        modal: addModal\n      }), React.createElement(\"div\", {\n        className: \"line\"\n      })))), React.createElement(Row, null, React.createElement(Col, null, React.createElement(CardPost, {\n        posts: posts\n      })))), React.createElement(TabPane, {\n        tabId: \"2\"\n      }, React.createElement(Row, null, React.createElement(Col, {\n        sm: \"12\"\n      }, React.createElement(\"div\", {\n        className: \"info_perfil_con\"\n      }, React.createElement(\"h2\", null, \"Historia\"), React.createElement(\"p\", null, user.history)), React.createElement(\"div\", {\n        className: \"info_perfil_con\"\n      }, React.createElement(\"h2\", null, \"intereses\"), React.createElement(\"p\", null, user.interest)), React.createElement(\"div\", {\n        className: \"info_perfil_con\"\n      }, React.createElement(\"h2\", null, \"correo\"), React.createElement(\"p\", null, user.mail))))), React.createElement(TabPane, {\n        tabId: \"3\"\n      }, React.createElement(Row, null, React.createElement(Col, {\n        sm: \"6\"\n      }, React.createElement(\"ul\", {\n        className: \"friend_main_cont\"\n      }, friends.map(function (item) {\n        return React.createElement(\"li\", {\n          key: uuid()\n        }, React.createElement(\"a\", {\n          href: item.url\n        }, React.createElement(\"div\", {\n          className: \"friend_cont\"\n        }, React.createElement(\"img\", {\n          className: \"img-fluid\",\n          src: item.perfilImg,\n          alt: \"\"\n        }), React.createElement(\"p\", null, item.fullName))));\n      }))), React.createElement(Col, {\n        sm: \"6\"\n      }, React.createElement(\"div\", null, React.createElement(\"h2\", {\n        style: {\n          marginTop: '2rem',\n          fontSize: \"1rem\"\n        }\n      }, \"Solicitudes de amistad\"), React.createElement(Friends, {\n        users: reqFriend,\n        onClick: this.handleFriend\n      }))))), React.createElement(TabPane, {\n        tabId: \"4\"\n      }, React.createElement(Row, null, React.createElement(Col, {\n        sm: \"12\"\n      }, React.createElement(\"h2\", null, \"Tab 4\"))))));\n    }\n  }]);\n\n  return PerfilNav;\n}(Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    store: state.store\n  };\n};\n\nexport default connect(mapStateToProps)(PerfilNav);","map":null,"metadata":{},"sourceType":"module"}