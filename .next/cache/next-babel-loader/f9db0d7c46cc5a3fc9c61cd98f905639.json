{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React, { Component } from 'react';\nimport './login.scss';\nimport { Button, Popover } from 'reactstrap';\nimport Logo from '../logo-2/logo';\nimport { validateEmail, validateEmpty } from '../../utils/functions';\nimport Fail from './fail';\nimport Spinner from '../spinner/spinner';\nimport Router from 'next/router';\nimport axios from 'axios';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { onUser, userAction } from '../../store/actions';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      login: true,\n      mail: '',\n      mailLabel: false,\n      mailPop: false,\n      pass: '',\n      passLabel: false,\n      passPop: false,\n      spinner: false,\n      fail: false\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"onChange\",\n    value: function onChange(e) {\n      this.setState(_defineProperty({}, e.target.id, e.target.value));\n    }\n  }, {\n    key: \"onFocus\",\n    value: function onFocus(e) {\n      var _this$setState2;\n\n      var label = \"\".concat(e.target.id, \"Label\");\n      var pop = \"\".concat(e.target.id, \"Pop\");\n      this.setState((_this$setState2 = {}, _defineProperty(_this$setState2, label, true), _defineProperty(_this$setState2, pop, false), _this$setState2));\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur(e) {\n      var label = \"\".concat(e.target.id, \"Label\");\n      this.setState(_defineProperty({}, label, false));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this2 = this;\n\n        var _this$state, mail, pass, onUser, data, response, id;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$state = this.state, mail = _this$state.mail, pass = _this$state.pass;\n                onUser = this.props.onUser;\n                e.preventDefault();\n\n                if (validateEmail(mail)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                this.setState({\n                  mailPop: true\n                });\n                _context.next = 26;\n                break;\n\n              case 7:\n                if (validateEmpty(pass)) {\n                  _context.next = 11;\n                  break;\n                }\n\n                this.setState({\n                  passPop: true\n                });\n                _context.next = 26;\n                break;\n\n              case 11:\n                this.setState({\n                  spinner: true,\n                  login: false\n                });\n                data = {\n                  mail: mail,\n                  pass: pass\n                };\n                _context.prev = 13;\n                _context.next = 16;\n                return axios.post('/api/login', data);\n\n              case 16:\n                response = _context.sent;\n                this.setState({\n                  spinner: false,\n                  login: true\n                });\n                id = response.data;\n                Router.push(\"/perfil/\".concat(id));\n                _context.next = 26;\n                break;\n\n              case 22:\n                _context.prev = 22;\n                _context.t0 = _context[\"catch\"](13);\n                this.setState({\n                  fail: true,\n                  login: false,\n                  spinner: false\n                });\n                setTimeout(function () {\n                  _this2.setState({\n                    login: true,\n                    fail: false\n                  });\n                }, 3000);\n\n              case 26:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[13, 22]]);\n      }));\n\n      function onSubmit(_x) {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          login = _this$state2.login,\n          mail = _this$state2.mail,\n          mailLabel = _this$state2.mailLabel,\n          mailPop = _this$state2.mailPop,\n          pass = _this$state2.pass,\n          passLabel = _this$state2.passLabel,\n          passPop = _this$state2.passPop,\n          spinner = _this$state2.spinner,\n          fail = _this$state2.fail;\n      return React.createElement(\"section\", {\n        className: \"login_main_cont animated fadeIn\"\n      }, login && React.createElement(\"div\", {\n        className: \"form_cont\"\n      }, React.createElement(\"div\", {\n        className: \"form_header\"\n      }, React.createElement(Logo, {\n        color: \"#669f09\",\n        logoWidth: \"30px\",\n        fontSize: \"1.2rem\"\n      })), React.createElement(\"form\", {\n        method: \"POST\",\n        className: \"form_login\",\n        onSubmit: this.onSubmit\n      }, React.createElement(\"div\", {\n        className: \"input_cont\",\n        style: mailPop ? {\n          borderBottomColor: '#ff6c1a'\n        } : {\n          borderBottomColor: \"#669f09\"\n        }\n      }, React.createElement(\"label\", {\n        htmlFor: \"mail\",\n        style: mailLabel ? {\n          color: '#8bb940',\n          background: '#fff'\n        } : {\n          color: 'transparent',\n          background: 'transparent'\n        }\n      }, \"mail\"), React.createElement(\"input\", {\n        id: \"mail\",\n        name: \"mail\",\n        type: \"text\",\n        className: \"green_input\",\n        placeholder: \"Correo electronico\",\n        value: mail,\n        onChange: this.onChange,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur\n      }), React.createElement(Popover, {\n        className: \"popMsg\",\n        placement: \"right\",\n        target: \"mail\",\n        isOpen: mailPop\n      }, React.createElement(\"p\", null, \"La direccion de correo no es valida\"))), React.createElement(\"div\", {\n        className: \"input_cont\",\n        style: passPop ? {\n          borderBottomColor: '#ff6c1a'\n        } : {\n          borderBottomColor: \"#669f09\"\n        }\n      }, React.createElement(\"label\", {\n        htmlFor: \"pass\",\n        style: passLabel ? {\n          color: '#8bb940',\n          background: '#fff'\n        } : {\n          color: 'transparent',\n          background: 'transparent'\n        }\n      }, \"pass\"), React.createElement(\"input\", {\n        id: \"pass\",\n        name: \"pass\",\n        type: \"password\",\n        className: \"green_input\",\n        placeholder: \"Contrase\\xF1a\",\n        value: pass,\n        onChange: this.onChange,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur\n      }), React.createElement(Popover, {\n        className: \"popMsg\",\n        placement: \"right\",\n        target: \"pass\",\n        isOpen: passPop\n      }, React.createElement(\"p\", null, \"La contrase\\xF1a no es valida\"))), React.createElement(Button, {\n        type: \"submit\"\n      }, \"entrar\"))), fail && React.createElement(Fail, {\n        className: \"animated fadeInDown\",\n        text: \"Correo o contrase\\xF1a invalido\"\n      }), spinner && React.createElement(Spinner, null));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userStore: state.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    onUser: onUser\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":null,"metadata":{},"sourceType":"module"}