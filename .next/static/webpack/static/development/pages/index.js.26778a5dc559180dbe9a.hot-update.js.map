{"version":3,"file":"static/webpack/static/development/pages/index.js.26778a5dc559180dbe9a.hot-update.js","sources":["webpack:///./components/form/input.jsx","webpack:///./components/hero/hero.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { Popover, PopoverBody } from 'reactstrap';\nimport classnames from 'classnames';\nimport './form.scss';\n\nconst eyeOpen = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M569.354 231.631C512.969 135.949 407.81 72 288 72 168.14 72 63.004 135.994 6.646 231.631a47.999 47.999 0 0 0 0 48.739C63.031 376.051 168.19 440 288 440c119.86 0 224.996-63.994 281.354-159.631a47.997 47.997 0 0 0 0-48.738zM288 392c-75.162 0-136-60.827-136-136 0-75.162 60.826-136 136-136 75.162 0 136 60.826 136 136 0 75.162-60.826 136-136 136zm104-136c0 57.438-46.562 104-104 104s-104-46.562-104-104c0-17.708 4.431-34.379 12.236-48.973l-.001.032c0 23.651 19.173 42.823 42.824 42.823s42.824-19.173 42.824-42.823c0-23.651-19.173-42.824-42.824-42.824l-.032.001C253.621 156.431 270.292 152 288 152c57.438 0 104 46.562 104 104z\" /></svg>;\nconst eyeClose = <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M286.693 391.984l32.579 46.542A333.958 333.958 0 0 1 288 440C168.19 440 63.031 376.051 6.646 280.369a47.999 47.999 0 0 1 0-48.739c24.023-40.766 56.913-75.775 96.024-102.537l57.077 81.539C154.736 224.82 152 240.087 152 256c0 74.736 60.135 135.282 134.693 135.984zm282.661-111.615c-31.667 53.737-78.747 97.46-135.175 125.475l.011.015 41.47 59.2c7.6 10.86 4.96 25.82-5.9 33.42l-13.11 9.18c-10.86 7.6-25.82 4.96-33.42-5.9L100.34 46.94c-7.6-10.86-4.96-25.82 5.9-33.42l13.11-9.18c10.86-7.6 25.82-4.96 33.42 5.9l51.038 72.617C230.68 75.776 258.905 72 288 72c119.81 0 224.969 63.949 281.354 159.631a48.002 48.002 0 0 1 0 48.738zM424 256c0-75.174-60.838-136-136-136-17.939 0-35.056 3.473-50.729 9.772l19.299 27.058c25.869-8.171 55.044-6.163 80.4 7.41h-.03c-23.65 0-42.82 19.17-42.82 42.82 0 23.626 19.147 42.82 42.82 42.82 23.65 0 42.82-19.17 42.82-42.82v-.03c18.462 34.49 16.312 77.914-8.25 110.95v.01l19.314 27.061C411.496 321.2 424 290.074 424 256zM262.014 356.727l-77.53-110.757c-5.014 52.387 29.314 98.354 77.53 110.757z\" /></svg>;\n\nclass Input extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      eye: false,\n      eyeShow: false,\n      type: 'text',\n    }\n    this.handleEye = this.handleEye.bind(this);\n  }\n\n  componentWillMount() {\n    const { type } = this.props;\n    if(type === 'password') {\n      this.setState({ type: 'password', eyeShow: true });\n    }\n\n  }\n\n  handleEye() {\n    const { eye } = this.state;\n    if (!eye) {\n      this.setState({ eye: true, type: 'text' });\n    } else {\n      this.setState({ eye: false, type: 'password' });\n    }\n  }\n\n  render(){\n    const {\n      id,\n      type,\n      value,\n      pop,\n      popText,\n      onBlur,\n      onFocus,\n      onChange,\n      color,\n      placeholder,\n      label,\n      style,\n    } = this.props;\n    const { eye } = this.state;\n    return(\n      <div className='input_main_cont' style={style}>\n        <div\n          className={classnames({\n          input_cont: true,\n          light: color === 'light',\n          dark: color === 'dark',\n        })}>\n          <label htmlFor={id}>{label}</label>\n          <div className=\"input_eye\">\n            <input\n              id={id}\n              value={value}\n              name={id}\n              type={this.state.type}\n              onBlur={onBlur}\n              onFocus={onFocus}\n              onChange={onChange}\n              placeholder={placeholder}\n            />\n            {\n              this.state.eyeShow && (       \n              <span className=\"pass\">\n                {\n                  eye ? <button onClick={this.handleEye} type=\"button\">{eyeOpen}</button> : <button onClick={this.handleEye} type=\"button\">{eyeClose}</button>\n                }\n              </span>\n              )\n            }\n          </div>\n          <Popover placement=\"bottom\" target={id} isOpen={pop}>\n            <PopoverBody>\n              {popText}\n            </PopoverBody>\n          </Popover>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport Heart from '../social-buttons/heart';\nimport Gift from '../social-buttons/gift';\nimport Comment from '../social-buttons/comment';\nimport Share from '../social-buttons/share';\nimport Button from '../buttons/button';\nimport RegisterCont from './register-cont';\nimport Input from '../form/input';\nimport { validateEmail, validateEmpty } from '../../utils/functions';\nimport Router from 'next/router';\nimport './hero.scss';\nimport Spinner from '../spinner/spinner';\n\nclass Hero extends Component{\n  constructor(props){\n    super(props);\n    this.state= {\n      register: true,\n      spinner: false,\n      registerForm: true,\n      mail: '',\n      mailError: true,\n      mailPop: false,\n      pass: '',\n      passPop: false,\n    }\n    this.onRegister = this.onRegister.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }s\n\n  onRegister() {\n    const { register } = this.state;\n    this.setState({ register: !register  });\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.id]: e.target.value });\n  }\n  handleFocus(e) {\n    const element = `${e.target.id}Pop`;\n    this.setState({ [element]: false });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const {\n      mail,\n      pass,\n    } = this.state;\n    if (!validateEmail(mail.trim().toLocaleLowerCase())) {\n      this.setState({ mailPop: true });\n    } else if (!validateEmpty(pass)) {\n      this.setState({ passPop: true });\n    } else {\n      const data = {\n        mail: mail.trim().toLocaleLowerCase(),\n        pass: pass,\n      }\n      Router.push('/postregistro')\n    }\n  }\n\n  render() {\n    const {\n      register,\n      registerForm,\n      mail,\n      mailError,\n      mailPop,\n      pass,\n      passPop,\n      spinner,\n    } = this.state;\n    const arrowCircle = <svg className=\"next\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M256 8c137 0 248 111 248 248S393 504 256 504 8 393 8 256 119 8 256 8zm-28.9 143.6l75.5 72.4H120c-13.3 0-24 10.7-24 24v16c0 13.3 10.7 24 24 24h182.6l-75.5 72.4c-9.7 9.3-9.9 24.8-.4 34.3l11 10.9c9.4 9.4 24.6 9.4 33.9 0L404.3 273c9.4-9.4 9.4-24.6 0-33.9L271.6 106.3c-9.4-9.4-24.6-9.4-33.9 0l-11 10.9c-9.5 9.6-9.3 25.1.4 34.4z\" /></svg>\n    return(\n      <section className=\"hero_main_cont\">\n      <p className=\"vertical_text\">La unica red social donde puedes ganar regalos y criptomonedas mientras te diviertes y ayudas al planeta</p>\n        <RegisterCont isOpen={register}>\n          {\n            registerForm && (\n              <form onSubmit={this.onSubmit}>\n              <div className=\"inputs_cont\">\n                <div className=\"mail_cont_registro\">\n                  <Input\n                    id=\"mail\"\n                    type=\"text\"\n                    value={mail}\n                    pop={mailPop}\n                    popText=\"El correo no es valido\"\n                    color=\"light\"\n                    placeholder=\"indique su direccion de correo\"\n                    label=\"Correo\"\n                    onChange={this.handleChange}\n                    onFocus={this.handleFocus}\n                    style={mailError ? { borderColor: 'red' } : { borderColor: '#fff' }}\n                  />\n                  <small style={mailError ? { display: 'block' } : { display: 'none' }}>El correo ya existe!</small>\n                </div>\n                <Input\n                  id=\"pass\"\n                  type=\"password\"\n                  value={pass}\n                  pop={passPop}\n                  popText=\"No puede estar vacio\"\n                  color=\"light\"\n                  placeholder=\"Contraseña\"\n                  label=\"Contraseña\"\n                  onChange={this.handleChange}\n                  onFocus={this.handleFocus}\n                />\n              </div>\n              <button type=\"submit\" className=\"btn_next\">{arrowCircle}</button>\n            </form>\n            )\n          }\n          {\n            spinner && <div style={{ marginTop: '25%' }}><Spinner /></div>\n          }\n        </RegisterCont>\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <div className=\"social_nav_cont\">\n                <nav className=\"social_nav\">\n                  <Heart />\n                  <Share />\n                  <Gift />\n                  <Comment />\n                </nav>\n              </div>\n            </div>\n            <div className=\"col-7\">\n              <div className=\"msg_cont\">\n                <div className=\"msg_cont-2\">\n                  <Button onClick={this.onRegister} size=\"lg\" color=\"light\">Unete</Button>\n                  <p>A Greenlink y</p>\n                </div>\n                <div className=\"msg_cont-1\">\n                  <h1>Comparte</h1>\n                  <div className=\"msg_complementary\">\n                    <p>Disfruta,</p>\n                    <p>Diviertete,</p>\n                    <p>Gana greencoins</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n};\n\nexport default Hero;\n"],"mappings":"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","sourceRoot":""}