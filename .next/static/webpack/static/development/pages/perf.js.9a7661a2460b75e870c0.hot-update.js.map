{"version":3,"file":"static/webpack/static/development/pages/perf.js.9a7661a2460b75e870c0.hot-update.js","sources":["webpack:///./pages/perf.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport Layout from '../components/layout/layout';\nimport './foo.scss';\nimport Header from '../components/perf/header';\nimport Quote from '../components/perf/quote';\nimport uuid from 'uuid/v1';\nimport axios from 'axios';\nimport { Modal, ModalBody, Button } from 'reactstrap';\n\nclass Perfil extends Component{\n  static getInitialProps = ({ query }) => {\n    const { user } = query;\n    return { user };\n  }\n\n  constructor(props){\n    super(props);\n    this.state = {\n      id: '',\n      perfilImg: '',\n      perfilLoader: false,\n      fullName: '',\n      frontPageQuote: '',\n      frontPageImg: '',\n      frontPageLoader: false,\n      quoteVisible: false,\n      owner: null,\n      friendReqLoader: false,\n      friendReqSent: '',\n      confirmationMsg: false,\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleChangeImg = this.handleChangeImg.bind(this);\n    this.onQuote = this.onQuote.bind(this);\n    this.onFriendReq = this.onFriendReq.bind(this);\n    this.accpetFriend = this.accpetFriend.bind(this);\n    this.cancelFriendReq = this.cancelFriendReq.bind(this);\n    this.onConfirmation = this.onConfirmation.bind(this);\n    this.rmFriend = this.rmFriend.bind(this);\n  }\n\n  componentWillMount(){\n    const { user } = this.props;\n    const fullName = `${user.name} ${user.lastName}`;\n    this.setState({\n      id: user.id,\n      perfilImg: user.perfilImg,\n      fullName,\n      frontPageQuote: user.frontPageQuote,\n      frontPageImg: user.frontPageImg,\n      owner: user.owner,\n      friendReqSent: user.friend,\n    })\n  }\n\n  componentDidMount() {\n    console.log(this.props.user);\n  }\n\n  handleChange(e) {\n    this.setState({ [e.target.id]: e.target.value });\n  }\n\n  handleChangeImg(e) {\n    const img = e.target.files[0];\n    const formData = new FormData();\n    const stateImg = `${e.target.id}Img`;\n    const loader = `${e.target.id}Loader`;\n    formData.append('file', img);\n    if(img) {\n      const options = {\n        method: \"POST\",\n        body: formData,\n      };\n      this.setState({ [loader]: true });\n      fetch(`/api/upload/${stateImg}`, options)\n        .then(res => {\n          if (res.status === 200) {\n            res.text()\n              .then(resp => {\n                this.setState({ [stateImg]: resp, [loader]: false  });\n              })\n          }\n        })\n    }\n  }\n\n  async accpetFriend(e){\n    this.setState({ friendReqLoader: true });\n    try{\n      const targetId = e.target.id;\n      await axios.get(`/aceptFriend/${targetId}`);\n      this.setState({ friendReqSent: 'accepted', friendReqLoader: false })\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  onQuote() {\n    const { quoteVisible } = this.state;\n    this.setState({ quoteVisible: !quoteVisible });\n  }\n\n  async onFriendReq(e) {\n    this.setState({ friendReqLoader: true });\n    try{\n      const { id } = this.state ;\n      const response = await axios.get(`/sendFriendReq/${id}`);\n      this.setState({ friendReqLoader: false, friendReqSent: 'sent'  });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async cancelFriendReq() {\n    try{\n      const { id }  = this.state;\n      await axios.get(`/cancelFriendReq/${id}`);\n      this.setState({ friendReqSent: '' });\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  onConfirmation() {\n    this.setState({ confirmationMsg: !this.state.confirmationMsg });\n  }\n\n  async rmFriend(){\n    try {\n      const { id } = this.state;\n      await axios.get(`/rmFriend/${id}`);\n      this.setState({ friendReqSent: '', confirmationMsg: !this.state.confirmationMsg });\n    } catch(err) {\n      console.log(err);\n    }\n  }\n\n  render() {\n    const {\n      id,\n      perfilImg,\n      perfilLoader,\n      fullName,\n      quoteVisible,\n      frontPageQuote,\n      frontPageImg,\n      frontPageLoader,\n      owner,\n      friendReqLoader,\n      friendReqSent,\n      confirmationMsg,\n    } = this.state;\n    return(\n      <Layout>\n        <Quote\n          isOpen={quoteVisible}\n          onQuote={this.onQuote}\n          handleChange={this.handleChange}\n          quote={frontPageQuote}\n          owner={owner}\n        />\n        <Modal isOpen={confirmationMsg}>\n          <ModalBody>\n            <div className=\"confirmation_cont\">\n              <p>Seguro que desea eliminar a <span>{fullName}</span></p>\n              <div className=\"confirmation_btn_cont\">\n                <Button size=\"sm\" onClick={this.onConfirmation} color=\"secondary\">No</Button>\n                <Button size=\"sm\" onClick={this.rmFriend} color=\"success\">Si</Button>\n              </div>\n            </div>\n          </ModalBody>\n        </Modal>\n        <Header\n          user={{\n            id,\n            perfilImg,\n            fullName,\n            frontPageImg,\n            frontPageQuote,\n            friendReqSent,\n          }}\n          owner={owner}\n          frontPageLoader={frontPageLoader}\n          perfilLoader={perfilLoader}\n          friendReqLoader={friendReqLoader}\n          action={{\n            onQuote: this.onQuote,\n            handleChangeImg: this.handleChangeImg,\n            onFriendReq: this.onFriendReq,\n            accpetFriend: this.accpetFriend,\n            cancelFriendReq: this.cancelFriendReq,\n            onConfirmation: this.onConfirmation\n          }}\n        />\n        <div className=\"void_space\"></div>\n      </Layout>\n    );\n  }\n}\n\nexport default Perfil;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAMA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAwBA;AACA;;;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;AAEA;;;;;;AACA;AAAA;AAAA;;AAEA;;AACA;AACA;;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;AAGA;AAAA;AAEA;AAAA;AAAA;AACA;;;;;;AAEA;;;;;;AACA;AAAA;AAAA;;AAEA;;AACA;AACA;;AADA;AACA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;;AACA;AACA;;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;AAIA;;AACA;AACA;;AAAA;AAAA;AAAA;AAAA;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAGA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAbA;AAsBA;AAAA;AAGA;;;;AA7LA;AACA;AADA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AA2LA;;;;A","sourceRoot":""}