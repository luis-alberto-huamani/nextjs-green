{"version":3,"file":"static/webpack/static/development/pages/perfil.js.98310ad4902509c6887b.hot-update.js","sources":["webpack:///./components/perfil/perfil-nav.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport CardPost from '../card-post/card-post';\nimport { connect } from 'react-redux';\nimport Store from '../store/store';\nimport Link from 'next/link';\nimport {\n  TabContent,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Row,\n  Col,\n} from 'reactstrap';\nimport classnames from 'classnames';\nimport AddPost from './add-post';\nimport './perfil-nav.scss';\nimport Friends from './friends';\nimport uuid from 'uuid/v1';\n/*const users = [\n  {\n    name: 'jhon',\n    lastName: 'ebrio',\n    perfilImg: '/static/friend-1.jpg',\n    frontPageQuote: 'Debemos cuidar el mundo, yo siemre reciclo mis latas de cerveza'\n  },\n  {\n    name: 'sacha',\n    lastName: 'gray',\n    perfilImg: '/static/friend-2.jpg',\n    frontPageQuote: 'En el set de grabacion todos los condones se reciclan'\n  },\n  {\n    name: 'rachel',\n    lastName: 'star',\n    perfilImg: '/static/friend-3.jpg',\n    frontPageQuote: 'Debemos cuidar nuestras playas para evitar el sifilis'\n  },\n  {\n    name: 'mia',\n    lastName: 'kalifa',\n    perfilImg: '/static/friend-4.jpg',\n    frontPageQuote: 'No tengo nada que decir, solo entre aqui a subir mis videos para ganar greencoins'\n  }\n];*/\n\nclass PerfilNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1',\n      history: '',\n      imgUrl: null,\n      posts:[],\n      addModal: false,\n      friends: [],\n      reqFriend: [],\n      currentUser: '',\n    };\n    this.onToggle = this.onToggle.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.onChangeImg = this.onChangeImg.bind(this);\n    this.addPost = this.addPost.bind(this);\n    this.handleFriend = this.handleFriend.bind(this);\n  }\n\n  componentWillMount() {\n    const { posts, user } = this.props;\n    this.setState({ posts: posts, reqFriend: user.friendReq, friends: user.friends });\n  }\n\n  componentDidMount() {\n    const currentUser = localStorage.getItem('id');\n    this.setState({ currentUser });\n  }\n\n  onToggle(tab) {\n    const { activeTab } = this.state;\n    if (activeTab !== tab) {\n      this.setState({ activeTab: tab });\n    }\n  }\n\n  onChangeText(e) {\n    this.setState({ history: e.target.value });\n  }\n  onChangeImg(e) {\n    const img = e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend= () => {\n      this.setState({ imgUrl: reader.result });\n    }\n    if (img) {\n      this.setState({ imgUrl: reader.readAsDataURL(img) });\n    } else {\n      this.setState({ imgUrl: null });\n    }\n  }\n\n  addPost(e) {\n    e.preventDefault()\n    const date = new Date().toLocaleDateString('es-ES', { year: 'numeric', month: 'numeric', day:'numeric' });\n    const { history, posts, imgUrl, addModal } = this.state;\n    const { id, user } = this.props;\n    const authorName = `${user.name} ${user.lastName}`;\n    const authorImg = user.perfilImg;\n    const newPost = {\n      author: {\n        img: authorImg,\n        name:authorName,\n      },\n      date,\n      imgUrl,\n      history,\n    };\n    const data = {\n      id,\n      author: newPost.author,\n      date: newPost.date,\n      imgUrl: newPost.imgUrl,\n      history: newPost.history,\n    }\n    this.setState({ addModal: true });\n    fetch('/api/newPost.js', {\n      headers: { \"Content-Type\": \"application/json\" },\n      method: \"POST\",\n      body: JSON.stringify(data),\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          this.setState({ history: '', imgUrl: null, posts: [newPost, ...this.state.posts], addModal: false  });\n        }\n      })\n      .catch(err => console.log(err));\n  }\n\n  handleFriend(action, id) {\n    const currentUser = localStorage.getItem('id');\n    const targetUser = id;\n    const data = {\n      currentUser,\n      targetUser\n    }\n    const options = {\n      headers: { \"Content-Type\": \"application/json\" },\n      method: 'POST',\n      body: JSON.stringify(data),\n    }\n    if (action === 'add') {\n      fetch(`http://localhost:4000/api/friend/add`, options)\n        .then(res => res.json())\n        .then(res => {\n          this.setState({ reqFriend: res });\n        })\n    }\n    if (action === 'rm') {\n      fetch(`http://localhost:4000/api/friend/rm`, options);\n    }\n  }\n  \n  render() {\n    const {\n      activeTab,\n      history,\n      imgUrl,\n      posts,\n      addModal,\n      reqFriend,\n      friends,\n      currentUser\n    } = this.state;\n    const { store, user } = this.props;\n    return (\n      <div>\n        {\n          store && <Store />\n        }\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1', nav_item: this.state.activeTab !== '1'  })}\n              onClick={()=>{this.onToggle('1')}}\n            >\n              Muro\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2', nav_item: this.state.activeTab !== '2'  })}\n              onClick={()=>{this.onToggle('2')}}\n            >\n              Historia\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '3', nav_item: this.state.activeTab !== '3'  })}\n              onClick={()=>{this.onToggle('3')}}\n            >\n              Amigos\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '4', nav_item: this.state.activeTab !== '4'  })}\n              onClick={()=>{this.onToggle('4')}}\n            >\n              Deseos\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={activeTab} >\n          <TabPane tabId='1'>\n            <Row>\n              <Col sm=\"12\">\n                {\n                  currentUser === user._id && (\n                    <div>\n                      <AddPost\n                      value={history}\n                      onChangeText={this.onChangeText}\n                      img={imgUrl}\n                      onChangeImg={this.onChangeImg}\n                      onSubmit={this.addPost}\n                      modal={addModal}\n                    />\n                      <div className=\"line\" />\n                    </div>\n                  )\n                }\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <CardPost posts={posts}  />\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId='2'>\n            <Row>\n              <Col sm=\"12\">\n                <div className=\"info_perfil_con\">\n                  <h2>Historia</h2>\n                  <p>{user.history}</p>\n                </div>\n                <div className=\"info_perfil_con\">\n                  <h2>intereses</h2>\n                  <p>{user.interest}</p>\n                </div>\n                <div className=\"info_perfil_con\">\n                  <h2>correo</h2>\n                  <p>{user.mail}</p>\n                </div>\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId='3'>\n            <Row>\n              <Col sm='6'>\n                <ul className=\"friend_main_cont\">\n                  {\n                    friends.map((item) => (\n                      <li key={uuid()}>\n                        <a href={item.url}>\n                          <div className=\"friend_cont\">\n                            <img className=\"img-fluid\" src={item.perfilImg} alt=\"\"/>\n                            <p>{item.fullName}</p>\n                          </div>\n                        </a>\n                      </li>\n                    ))\n                  }\n                </ul>\n              </Col>\n              <Col sm=\"6\">\n                <div className=\"friends_main_cont\">\n                <h2 style={{marginTop: '2rem'}}>Solicitudes de amistad</h2>\n                  {\n                    <Friends \n                      users={reqFriend}\n                      onClick={this.handleFriend}\n                    />\n                  }                \n                </div>\n            </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId='4'>\n            <Row>\n              <Col sm=\"12\">\n                <h2>Tab 4</h2>\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => ({ store: state.store });\n\nexport default connect(mapStateToProps)(PerfilNav);\n\n"],"mappings":"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","sourceRoot":""}